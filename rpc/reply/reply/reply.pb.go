// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.27.1
// 	protoc        v3.17.3
// source: reply.proto

package reply

import (
	context "context"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type CreateReplyReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	PostId  int64  `protobuf:"varint,1,opt,name=post_id,json=postId,proto3" json:"post_id,omitempty"`
	Content string `protobuf:"bytes,2,opt,name=content,proto3" json:"content,omitempty"`
}

func (x *CreateReplyReq) Reset() {
	*x = CreateReplyReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_reply_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateReplyReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateReplyReq) ProtoMessage() {}

func (x *CreateReplyReq) ProtoReflect() protoreflect.Message {
	mi := &file_reply_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateReplyReq.ProtoReflect.Descriptor instead.
func (*CreateReplyReq) Descriptor() ([]byte, []int) {
	return file_reply_proto_rawDescGZIP(), []int{0}
}

func (x *CreateReplyReq) GetPostId() int64 {
	if x != nil {
		return x.PostId
	}
	return 0
}

func (x *CreateReplyReq) GetContent() string {
	if x != nil {
		return x.Content
	}
	return ""
}

type CreateReplyResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Success bool `protobuf:"varint,1,opt,name=success,proto3" json:"success,omitempty"`
}

func (x *CreateReplyResp) Reset() {
	*x = CreateReplyResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_reply_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateReplyResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateReplyResp) ProtoMessage() {}

func (x *CreateReplyResp) ProtoReflect() protoreflect.Message {
	mi := &file_reply_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateReplyResp.ProtoReflect.Descriptor instead.
func (*CreateReplyResp) Descriptor() ([]byte, []int) {
	return file_reply_proto_rawDescGZIP(), []int{1}
}

func (x *CreateReplyResp) GetSuccess() bool {
	if x != nil {
		return x.Success
	}
	return false
}

type GetRepliesReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	PostId int64 `protobuf:"varint,1,opt,name=post_id,json=postId,proto3" json:"post_id,omitempty"`
}

func (x *GetRepliesReq) Reset() {
	*x = GetRepliesReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_reply_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetRepliesReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetRepliesReq) ProtoMessage() {}

func (x *GetRepliesReq) ProtoReflect() protoreflect.Message {
	mi := &file_reply_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetRepliesReq.ProtoReflect.Descriptor instead.
func (*GetRepliesReq) Descriptor() ([]byte, []int) {
	return file_reply_proto_rawDescGZIP(), []int{2}
}

func (x *GetRepliesReq) GetPostId() int64 {
	if x != nil {
		return x.PostId
	}
	return 0
}

type ReplyInfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id      int64  `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	Content string `protobuf:"bytes,2,opt,name=content,proto3" json:"content,omitempty"`
}

func (x *ReplyInfo) Reset() {
	*x = ReplyInfo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_reply_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ReplyInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ReplyInfo) ProtoMessage() {}

func (x *ReplyInfo) ProtoReflect() protoreflect.Message {
	mi := &file_reply_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ReplyInfo.ProtoReflect.Descriptor instead.
func (*ReplyInfo) Descriptor() ([]byte, []int) {
	return file_reply_proto_rawDescGZIP(), []int{3}
}

func (x *ReplyInfo) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *ReplyInfo) GetContent() string {
	if x != nil {
		return x.Content
	}
	return ""
}

type GetRepliesResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	List []*ReplyInfo `protobuf:"bytes,1,rep,name=list,proto3" json:"list,omitempty"`
}

func (x *GetRepliesResp) Reset() {
	*x = GetRepliesResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_reply_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetRepliesResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetRepliesResp) ProtoMessage() {}

func (x *GetRepliesResp) ProtoReflect() protoreflect.Message {
	mi := &file_reply_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetRepliesResp.ProtoReflect.Descriptor instead.
func (*GetRepliesResp) Descriptor() ([]byte, []int) {
	return file_reply_proto_rawDescGZIP(), []int{4}
}

func (x *GetRepliesResp) GetList() []*ReplyInfo {
	if x != nil {
		return x.List
	}
	return nil
}

var File_reply_proto protoreflect.FileDescriptor

var file_reply_proto_rawDesc = []byte{
	0x0a, 0x0b, 0x72, 0x65, 0x70, 0x6c, 0x79, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x05, 0x72,
	0x65, 0x70, 0x6c, 0x79, 0x22, 0x43, 0x0a, 0x0e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x52, 0x65,
	0x70, 0x6c, 0x79, 0x52, 0x65, 0x71, 0x12, 0x17, 0x0a, 0x07, 0x70, 0x6f, 0x73, 0x74, 0x5f, 0x69,
	0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x06, 0x70, 0x6f, 0x73, 0x74, 0x49, 0x64, 0x12,
	0x18, 0x0a, 0x07, 0x63, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x07, 0x63, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x22, 0x2b, 0x0a, 0x0f, 0x43, 0x72, 0x65,
	0x61, 0x74, 0x65, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x52, 0x65, 0x73, 0x70, 0x12, 0x18, 0x0a, 0x07,
	0x73, 0x75, 0x63, 0x63, 0x65, 0x73, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x08, 0x52, 0x07, 0x73,
	0x75, 0x63, 0x63, 0x65, 0x73, 0x73, 0x22, 0x28, 0x0a, 0x0d, 0x47, 0x65, 0x74, 0x52, 0x65, 0x70,
	0x6c, 0x69, 0x65, 0x73, 0x52, 0x65, 0x71, 0x12, 0x17, 0x0a, 0x07, 0x70, 0x6f, 0x73, 0x74, 0x5f,
	0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x06, 0x70, 0x6f, 0x73, 0x74, 0x49, 0x64,
	0x22, 0x35, 0x0a, 0x09, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x0e, 0x0a,
	0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x02, 0x69, 0x64, 0x12, 0x18, 0x0a,
	0x07, 0x63, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07,
	0x63, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x22, 0x36, 0x0a, 0x0e, 0x47, 0x65, 0x74, 0x52, 0x65,
	0x70, 0x6c, 0x69, 0x65, 0x73, 0x52, 0x65, 0x73, 0x70, 0x12, 0x24, 0x0a, 0x04, 0x6c, 0x69, 0x73,
	0x74, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x10, 0x2e, 0x72, 0x65, 0x70, 0x6c, 0x79, 0x2e,
	0x52, 0x65, 0x70, 0x6c, 0x79, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x04, 0x6c, 0x69, 0x73, 0x74, 0x32,
	0x80, 0x01, 0x0a, 0x05, 0x72, 0x65, 0x70, 0x6c, 0x79, 0x12, 0x3c, 0x0a, 0x0b, 0x43, 0x72, 0x65,
	0x61, 0x74, 0x65, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x12, 0x15, 0x2e, 0x72, 0x65, 0x70, 0x6c, 0x79,
	0x2e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x52, 0x65, 0x71, 0x1a,
	0x16, 0x2e, 0x72, 0x65, 0x70, 0x6c, 0x79, 0x2e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x52, 0x65,
	0x70, 0x6c, 0x79, 0x52, 0x65, 0x73, 0x70, 0x12, 0x39, 0x0a, 0x0a, 0x47, 0x65, 0x74, 0x52, 0x65,
	0x70, 0x6c, 0x69, 0x65, 0x73, 0x12, 0x14, 0x2e, 0x72, 0x65, 0x70, 0x6c, 0x79, 0x2e, 0x47, 0x65,
	0x74, 0x52, 0x65, 0x70, 0x6c, 0x69, 0x65, 0x73, 0x52, 0x65, 0x71, 0x1a, 0x15, 0x2e, 0x72, 0x65,
	0x70, 0x6c, 0x79, 0x2e, 0x47, 0x65, 0x74, 0x52, 0x65, 0x70, 0x6c, 0x69, 0x65, 0x73, 0x52, 0x65,
	0x73, 0x70, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_reply_proto_rawDescOnce sync.Once
	file_reply_proto_rawDescData = file_reply_proto_rawDesc
)

func file_reply_proto_rawDescGZIP() []byte {
	file_reply_proto_rawDescOnce.Do(func() {
		file_reply_proto_rawDescData = protoimpl.X.CompressGZIP(file_reply_proto_rawDescData)
	})
	return file_reply_proto_rawDescData
}

var file_reply_proto_msgTypes = make([]protoimpl.MessageInfo, 5)
var file_reply_proto_goTypes = []interface{}{
	(*CreateReplyReq)(nil),  // 0: reply.CreateReplyReq
	(*CreateReplyResp)(nil), // 1: reply.CreateReplyResp
	(*GetRepliesReq)(nil),   // 2: reply.GetRepliesReq
	(*ReplyInfo)(nil),       // 3: reply.ReplyInfo
	(*GetRepliesResp)(nil),  // 4: reply.GetRepliesResp
}
var file_reply_proto_depIdxs = []int32{
	3, // 0: reply.GetRepliesResp.list:type_name -> reply.ReplyInfo
	0, // 1: reply.reply.CreateReply:input_type -> reply.CreateReplyReq
	2, // 2: reply.reply.GetReplies:input_type -> reply.GetRepliesReq
	1, // 3: reply.reply.CreateReply:output_type -> reply.CreateReplyResp
	4, // 4: reply.reply.GetReplies:output_type -> reply.GetRepliesResp
	3, // [3:5] is the sub-list for method output_type
	1, // [1:3] is the sub-list for method input_type
	1, // [1:1] is the sub-list for extension type_name
	1, // [1:1] is the sub-list for extension extendee
	0, // [0:1] is the sub-list for field type_name
}

func init() { file_reply_proto_init() }
func file_reply_proto_init() {
	if File_reply_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_reply_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateReplyReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_reply_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateReplyResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_reply_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetRepliesReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_reply_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ReplyInfo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_reply_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetRepliesResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_reply_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   5,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_reply_proto_goTypes,
		DependencyIndexes: file_reply_proto_depIdxs,
		MessageInfos:      file_reply_proto_msgTypes,
	}.Build()
	File_reply_proto = out.File
	file_reply_proto_rawDesc = nil
	file_reply_proto_goTypes = nil
	file_reply_proto_depIdxs = nil
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConnInterface

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion6

// ReplyClient is the client API for Reply service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type ReplyClient interface {
	CreateReply(ctx context.Context, in *CreateReplyReq, opts ...grpc.CallOption) (*CreateReplyResp, error)
	GetReplies(ctx context.Context, in *GetRepliesReq, opts ...grpc.CallOption) (*GetRepliesResp, error)
}

type replyClient struct {
	cc grpc.ClientConnInterface
}

func NewReplyClient(cc grpc.ClientConnInterface) ReplyClient {
	return &replyClient{cc}
}

func (c *replyClient) CreateReply(ctx context.Context, in *CreateReplyReq, opts ...grpc.CallOption) (*CreateReplyResp, error) {
	out := new(CreateReplyResp)
	err := c.cc.Invoke(ctx, "/reply.reply/CreateReply", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *replyClient) GetReplies(ctx context.Context, in *GetRepliesReq, opts ...grpc.CallOption) (*GetRepliesResp, error) {
	out := new(GetRepliesResp)
	err := c.cc.Invoke(ctx, "/reply.reply/GetReplies", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// ReplyServer is the server API for Reply service.
type ReplyServer interface {
	CreateReply(context.Context, *CreateReplyReq) (*CreateReplyResp, error)
	GetReplies(context.Context, *GetRepliesReq) (*GetRepliesResp, error)
}

// UnimplementedReplyServer can be embedded to have forward compatible implementations.
type UnimplementedReplyServer struct {
}

func (*UnimplementedReplyServer) CreateReply(context.Context, *CreateReplyReq) (*CreateReplyResp, error) {
	return nil, status.Errorf(codes.Unimplemented, "method CreateReply not implemented")
}
func (*UnimplementedReplyServer) GetReplies(context.Context, *GetRepliesReq) (*GetRepliesResp, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetReplies not implemented")
}

func RegisterReplyServer(s *grpc.Server, srv ReplyServer) {
	s.RegisterService(&_Reply_serviceDesc, srv)
}

func _Reply_CreateReply_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(CreateReplyReq)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ReplyServer).CreateReply(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/reply.reply/CreateReply",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ReplyServer).CreateReply(ctx, req.(*CreateReplyReq))
	}
	return interceptor(ctx, in, info, handler)
}

func _Reply_GetReplies_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetRepliesReq)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ReplyServer).GetReplies(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/reply.reply/GetReplies",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ReplyServer).GetReplies(ctx, req.(*GetRepliesReq))
	}
	return interceptor(ctx, in, info, handler)
}

var _Reply_serviceDesc = grpc.ServiceDesc{
	ServiceName: "reply.reply",
	HandlerType: (*ReplyServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "CreateReply",
			Handler:    _Reply_CreateReply_Handler,
		},
		{
			MethodName: "GetReplies",
			Handler:    _Reply_GetReplies_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "reply.proto",
}
