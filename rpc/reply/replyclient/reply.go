// Code generated by taoctl. DO NOT EDIT!
// Source: reply.proto

package replyclient

import (
	"context"

	"sllt/backend-learning/blog/rpc/reply/reply"

	"google.golang.org/grpc"
	"manlu.org/tao/zrpc"
)

type (
	CreateReplyReq  = reply.CreateReplyReq
	CreateReplyResp = reply.CreateReplyResp
	GetRepliesReq   = reply.GetRepliesReq
	GetRepliesResp  = reply.GetRepliesResp
	ReplyInfo       = reply.ReplyInfo

	Reply interface {
		CreateReply(ctx context.Context, in *CreateReplyReq, opts ...grpc.CallOption) (*CreateReplyResp, error)
		GetReplies(ctx context.Context, in *GetRepliesReq, opts ...grpc.CallOption) (*GetRepliesResp, error)
	}

	defaultReply struct {
		cli zrpc.Client
	}
)

func NewReply(cli zrpc.Client) Reply {
	return &defaultReply{
		cli: cli,
	}
}

func (m *defaultReply) CreateReply(ctx context.Context, in *CreateReplyReq, opts ...grpc.CallOption) (*CreateReplyResp, error) {
	client := reply.NewReplyClient(m.cli.Conn())
	return client.CreateReply(ctx, in, opts...)
}

func (m *defaultReply) GetReplies(ctx context.Context, in *GetRepliesReq, opts ...grpc.CallOption) (*GetRepliesResp, error) {
	client := reply.NewReplyClient(m.cli.Conn())
	return client.GetReplies(ctx, in, opts...)
}
